@echo off
::---------------------------------------------------
:: Program : Automated Microsoft SQL Database Backup
:: Version : V1.0
:: Created by : Nestor B. Gramata Jr.
:: Date: May 2, 2017
:: Filename: CreateTask_DAYofWEEK_HHMMSS@DBNAMENAME.cmd
::---------------------------------------------------
:: Description:
::  Creates a task in the the task scheduler
::  Designed to create a task for weekly backups
::  Filename is used to extract variable information
::
:: Required Inputs/Arguments:
::  None
:: 
:: This is part of a group of files including:
::  1. MicSQL_Backup@DBNAME.cmd               (i.e. MicSQL_Backup@HR91.cmd)
::  2. CreateTask_DAYofWEEK_HHMMSS@DBNAME.cmd (i.e. CreateTask_TUE_000500@HR91.cmd)
::  3. DeleteTask@DBNAME.cmd                  (i.e. DeleteTask@HR91.cmd)
::  4. SendEmail.vbs
::  5. StoreSQLPass.cmd
::
::  ***If all 4 files are in their template names (unedited), you may edit only this file
::    - executing this automatically renames MicSQL_Backup@DBNAME.cmd and DeleteTask@DBNAME.cmd
::
:: IMPORTANT:
::	 Carefully change the filename
::   Create a separate empty folder where to place these 4 files! (i.e. E:\BACKUP\HR91\Automated)
::     - This is to prevent overwriting of files that may probably have the same name as that generated by the script
::   Run Script as Admin
::
:: Instructions:
::  1. Change DAYofWEEK in the filename to an appropriate Day of the Week for weekly backups (i.e. TUE)
::       - Possible Values: SUN MON TUE WED THU FRI SAT
::  2. Change HHMMSS in the filename to appropriate Start Time in 24-hour format (i.e. 000500)
::       - Numbers must strictly be 6 digits (2 for hours, 2 for minutes, 2 for seconds)
::       - 000000 would mean 12am or midnight
::       - 112300 would mean 11:23am
::  3. Change DBNAME in the filename to appropriate Database Name (i.e. HR91)
::---------------------------------------------------

REM This creates a task based on this script's FILENAME after @
echo Running Script for Scheduled Task Creation...

REM Get the name of this file
set FILENAME=%~n0

REM Get working dir of this file
set WORKING_DIR=%~dp0

REM Parses the FILENAME after @ and uses it as the DBNAME
for /f "delims=@ tokens=2" %%x in ("%FILENAME%") do (set DBNAME=%%x)
echo DB Name: %DBNAME%

REM Parses the FILENAME for running date parameters
for /f "delims=_ tokens=2" %%x in ("%FILENAME%") do (set DAYofWEEK=%%x)
echo Execute Weekly on Day: %DAYofWEEK%
for /f "delims=_@ tokens=3" %%x in ("%FILENAME%") do (set STARTTIME=%%x)
echo Start Time (HHMMSS): %STARTTIME%
echo NOTE: older Windows "schtasks" CLI interface might ignore the seconds parameter

set HH=%STARTTIME:~0,2%
set MM=%STARTTIME:~2,2%
set SS=%STARTTIME:~4,2%

REM if files are fresh from the template, then you'd only need to properly rename this file
if exist MicSQL_Backup@DBNAME.cmd (
	move %WORKING_DIR%MicSQL_Backup@DBNAME.cmd %WORKING_DIR%MicSQL_Backup@%DBNAME%.cmd > NUL
    echo Renamed: MicSQL_Backup@DBNAME.cmd
)
if exist DeleteTask@DBNAME.cmd (
	move %WORKING_DIR%DeleteTask@DBNAME.cmd %WORKING_DIR%DeleteTask@%DBNAME%.cmd > NUL
    echo Renamed: DeleteTask@DBNAME.cmd
)

echo/
echo Enter currently logged user password to continue with scheduled task creation
echo/
set "psCommand=powershell -Command "$pword = read-host 'Enter Password' -AsSecureString ; ^
    $BSTR=[System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($pword); ^
        [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($BSTR)""
for /f "usebackq delims=" %%p in (`%psCommand%`) do set TASKPASS=%%p

REM Create Task
schtasks /Create /TN "MicSQL_Backup@%DBNAME%" /TR "%WORKING_DIR%MicSQL_Backup@%DBNAME%.cmd" /SC weekly /D %DAYofWEEK% /ST %HH%:%MM%:%SS% /RL LIMITED /RU "%USERNAME%" /RP "%TASKPASS%"

REM Use XML to modify task and enable task to execute even if server is on batteries
schtasks /Query /TN "MicSQL_Backup@%DBNAME%" /XML > %WORKING_DIR%temp.xml
powershell -Command "(get-content %WORKING_DIR%temp.xml) -replace \"^<DisallowStartIfOnBatteries^>true^</DisallowStartIfOnBatteries^>\" , \"^<DisallowStartIfOnBatteries^>false^</DisallowStartIfOnBatteries^>\" | set-content %WORKING_DIR%temp.xml"  
powershell -Command "(get-content %WORKING_DIR%temp.xml) -replace \"^<StopIfGoingOnBatteries^>true^</StopIfGoingOnBatteries^>\" , \"^<StopIfGoingOnBatteries^>false^</StopIfGoingOnBatteries^>\" | set-content %WORKING_DIR%temp.xml"  
schtasks /Create /XML %WORKING_DIR%temp.xml /TN "MicSQL_Backup@%DBNAME%" /RU "%USERNAME%" /RP "%TASKPASS%" /F >NUL 2>&1
del "%WORKING_DIR%temp.xml"

echo/
pause